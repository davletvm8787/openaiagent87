import openai
import sqlite3
import requests
import pdfplumber
import json
import speech_recognition 
import gTTS
from asyncio import Translator

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI –∫–ª–∏–µ–Ω—Ç–∞
client = openai.OpenAI()
translator = Translator()

# üîç –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–µ–±-–ø–æ–∏—Å–∫–∞
def web_search(query):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""
    response = requests.get(f"https://api.searchengine.com?q={query}")
    return response.text[:500]  

# üìÑ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è PDF
def read_pdf(file_path):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç PDF –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç."""
    with pdfplumber.open(file_path) as pdf:
        text = "\n".join(page.extract_text() for page in pdf.pages if page.extract_text())
    return text[:1000]  

# üóÑÔ∏è –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
def query_database(db_path, query):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite."""
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    cursor.execute(query)
    result = cursor.fetchall()
    conn.close()
    return result

# üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é OpenAI
def generate_text(prompt):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞—Ç—å—é –∏–ª–∏ email) —Å –ø–æ–º–æ—â—å—é AI."""
    response = client.beta.completions.create(
        model="gpt-4-turbo",
        messages=[{"role": "user", "content": prompt}]
    )
    return response.choices[0].message["content"]

# üåç –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
def translate_text(text, dest_language="en"):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —è–∑—ã–∫."""
    translated = translator.translate(text, dest=dest_language)
    return translated.text

# ‚òÅÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ API
def get_weather(city):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ."""
    api_key = "–¢–í–û–ô_API_–ö–õ–Æ–ß"  # –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π –∫–ª—é—á –¥–ª—è OpenWeatherMap
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
    response = requests.get(url)
    data = json.loads(response.text)
    if data.get("main"):
        return f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ {city}: {data['main']['temp']}¬∞C, {data['weather'][0]['description']}"
    return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."

# üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥
def speech_to_text():
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≥–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é SpeechRecognition."""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("–ì–æ–≤–æ—Ä–∏—Ç–µ...")
        audio = recognizer.listen(source)
    try:
        text = recognizer.recognize_google(audio, language="ru-RU")
        return text
    except sr.UnknownValueError:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å."
    except sr.RequestError:
        return "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è."

# üîä –ì–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç
def text_to_speech(text, lang="ru"):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ MP3-—Ñ–∞–π–ª."""
    tts = gTTS(text=text, lang=lang)
    tts.save("response.mp3")
    return "–ê—É–¥–∏–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ response.mp3"

# üß† –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
agent = client.beta.agents.create(
    name="SmartAssistant",
    instructions="–¢—ã –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫, —É–º–µ—é—â–∏–π –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã, —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ë–î, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏ –≥–æ–≤–æ—Ä–∏—Ç—å.",
    tools=[
        {"name": "web_search", "function": web_search},
        {"name": "read_pdf", "function": read_pdf},
        {"name": "query_database", "function": query_database},
        {"name": "generate_text", "function": generate_text},
        {"name": "translate_text", "function": translate_text},
        {"name": "get_weather", "function": get_weather},
        {"name": "speech_to_text", "function": speech_to_text},
        {"name": "text_to_speech", "function": text_to_speech}
    ]
)

print("–ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!")
